#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2014 Osiris Alejandro Gomez <osiux@osiux.com.ar>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

if [ -z $1 ]
then
  echo ERROR not found pcap file: $1
  exit 1
else
  PCAP=$1
fi

FILTERS='port 80'
IPS='ips.tmp'
RANK=200
PACKETS=1000
DOT=tcp2dot.dot

tcpdump -tttnnn -r $PCAP $FILTERS 2>/dev/null | \
cut -d ' ' -f 3,5 | tr -d ":" | \
egrep -v "[a-zA-Z]" | \
sort | uniq -c | sort -nr | \
awk '{print $2"."$3}' | \
head -n $RANK | \
awk -F\. '{print $1"."$2"."$3"."$4" "$5" "$6"."$7"."$8"."$9" "$10}' > $IPS

words2png ()
{
  c=1
  I=''
  WORDS=$(echo "$1" | tr "/" " " | tr A-Z a-z | egrep -wo "[a-z]+{3,}")
  echo $WORDS | tr " " "\n" | sort -u | while read W
  do
    F=img/$W.png
    if [ $c -gt 4 ]
    then
      break;
    else
      if [ -e $F ]
      then
        echo $F
        I=$I' '$F
        c=$[$c+1]
      fi
    fi
  done

  echo $I
}

echo "digraph tcp {" >$DOT
echo 'node [shape="none", fontname="inconsolata", fontsize=10];' >>$DOT
echo 'edge [arrowsize=.5, color=gray];' >>$DOT

cat $IPS | while read LINE
do
  SIP=$(echo $LINE | cut -d ' ' -f1)
  SPORT=$(echo $LINE | cut -d ' ' -f2)
  DIP=$(echo $LINE | cut -d ' ' -f3)
  DPORT=$(echo $LINE | cut -d ' ' -f4)
  
  S=$SIP"."$SPORT
  D=$DIP"."$DPORT

  echo "\""$SIP"\" -> \""$S"\" [len=3];" >>$DOT
  echo "\""$S"\" -> \""$D"\" [len=1.5];" >>$DOT
  echo "\""$D\"" -> \""$DIP"\" [len=3];" >>$DOT

  echo "\""$SIP\"" [label=\""$SIP"\"];" >>$DOT
  echo "\""$DIP\"" [label=\""$DIP"\"];" >>$DOT
  echo "\""$S\"" [label=\""$SPORT"\"];" >>$DOT
  echo "\""$D\"" [label=\""$DPORT"\"];" >>$DOT

done

# capture Server header
grep " 80 " $IPS | sort -u | while read LINE
do
  SIP=$(echo $LINE | cut -d' ' -f1)
  DIP=$(echo $LINE | cut -d' ' -f3)
  DPORT=$(echo $LINE | cut -d' ' -f4)
  FILTER="src port 80 and src $SIP and dst $DIP and dst port $DPORT"
  SERVER=$(ngrep -I $PCAP -S 190 -q -W byline 'Server:' $FILTER | \
  grep ^Server: | head -1 | cut -c 9-)
  IMG=$(words2png "$SERVER")
  NODE=$SIP".80"
  FILE=img/$NODE.png

  if [ ! -z "$IMG" ]
  then
    if [ ! -e $FILE ]
    then
      convert -append $IMG $FILE
    fi
    echo "\""$NODE"\" [shape=\"none\", label=\"\", image=\"$FILE\"];" >>$DOT
  fi
done

# capture User-agent
grep 80$ $IPS | cut -d ' ' -f1,2 | sort -u | while read SIP_SPORT
do
  SIP=$(echo $SIP_SPORT | cut -d' ' -f1)
  SPORT=$(echo $SIP_SPORT | cut -d' ' -f2)
  HTTP_GET="src host $SIP and src port $SPORT and dst port 80 and tcp[32:4]= 0x47455420"
  TCP_UA="tcpdump -tttnnnA -s1024 -c1 -r $PCAP $HTTP_GET"
  UA=$($TCP_UA 2>/dev/null | egrep "^User-Agent:" | cut -c 13-)
  IMG=$(words2png "$UA")
  NODE=$SIP"."$SPORT
  FILE=img/$NODE.png

  if [ ! -z "$IMG" ]
  then
    if [ ! -e $FILE ]
    then
      convert -append $IMG $FILE
    fi
    echo "\""$NODE"\" [shape=\"none\", label=\"\", image=\"$FILE\"];" >>$DOT
  fi
done

echo "}" >>$DOT

cat $DOT
